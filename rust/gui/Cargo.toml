[package]
edition = "2021"
name = "fin_model_gui"
version = "0.0.1"
description = """TODO: Describe cargo project(fin_model_gui)"""
license = "MIT"
keywords = []


[lib]
# α <lib>
crate-type = ["cdylib", "rlib"]
# ω <lib>

[dependencies]
# α <dependencies>

plus_modeled = { path = "../model" }
chrono = "0.4"
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
cfg-if = "1"

### TODO: Switching to this branch until released
# leptos = { git = "https://github.com/leptos-rs/leptos", branch="stored-value-panic-fix", default-features = false, features = [ "serde"] }
# leptos_meta = { git = "https://github.com/leptos-rs/leptos", branch="stored-value-panic-fix", default-features = false }
# leptos_actix = { git = "https://github.com/leptos-rs/leptos", branch="stored-value-panic-fix", optional = true }
# leptos_router = { git = "https://github.com/leptos-rs/leptos", branch="stored-value-panic-fix", default-features = false }
# leptos_dom = { git = "https://github.com/leptos-rs/leptos", branch="stored-value-panic-fix" }

leptos = { version = "0.4", default-features = false, features = [
  "serde",
] }
leptos_meta = { version = "0.4", default-features = false }
leptos_actix = { version = "0.4", optional = true }
leptos_router = { version = "0.4", default-features = false }
leptos_dom = { version = "0.4" }
wasm-bindgen = "=0.2.87"
web-sys = { version = "0.3", features = [ "Performance"] }
num-format = "0.4.3"
log = "0.4"
test-log = "0.2.11"
env_logger = "0.9.1"
console_log = "1"
strum = "0.24.1"
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
plotters = "0.3.4"
plotters-svg = "0.3.3"
once_cell = "1.17.1"
tracing-subscriber-wasm = "0.1.0"
leptos-use = "0.6.0"

# ω <dependencies>

[build-dependencies]
# α <build-dependencies>
# ω <build-dependencies>

[features]
# α <features>
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
  "dep:actix-files",
  "dep:actix-web",
  "dep:leptos_actix",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
]
# ω <features>
# α <additional>

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "fin_model_gui"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

bin-target = "fin_model_gui"


[dev-dependencies]
criterion = "0.4.0"

[[bench]]
name = "clamp_bench"
harness = false

[[bench]]
name = "date_input_bench"
harness = false

# ω <additional>