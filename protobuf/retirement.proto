/*
  Messages associated with retirement contributions and investments.
*/

syntax = "proto3";

import "core.proto";

package retirement;

option java_package="plus_modeled";

/*
  Models investment in retirement accounts with contributions limited by system rules.
*/
message RetirementContribution {
  /*
    Index to the `holding` the contribution will go.
  */
  uint32 account_index = 1;
  
  /*
    Index to the `FlowSpec` containing the earned income.
  */
  uint32 earned_income_index = 2;
  
  /*
    Annual goal for investing contributions - if 0 maximum is the goal.
  */
  optional double annual_investment_goal = 3;
  
  /*
    Growth rate for the annual investment goal, if `None` defaulted to inflation.
  */
  optional core.RateCurve goal_growth_rate = 4;
  
  /*
    Year range for the contributions.
  */
  core.YearRange year_range = 5;
  
  /*
    Employer match for the contributions.
  */
  optional EmployerMatchProgram employer_match_program = 6;
}

/*
  Models typical employer match programs.
*/
message EmployerMatchProgram {
  /*
    Percent of the employee contribution that is matched by the company.
  */
  double matching_percent = 1;
  
  /*
    Cap on total percent of salary that an employer will match.
  */
  double matching_percent_cap = 2;
}

/*
  Models annual limits on contributions, grown annually at inflation
*/
message RetirementContributionLimit {
  /*
    Contribution limit - dated so can be scaled in time.
  */
  core.YearValue limit = 1;
  
  /*
    Age, on or beyond which `catch_up_limit` _additional_ amount is allowed.
  */
  uint32 catch_up_start_age = 2;
  
  /*
    Additional contribution amount allowed if older than `catch_up_start_age`.
  */
  core.YearValue catch_up_limit = 3;
}