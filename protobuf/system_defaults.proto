/*
  Default data that exists in the database (non-normalized json).
*/

syntax = "proto3";

import "core.proto";
import "core_enums.proto";
import "retirement.proto";
import "growth.proto";

package system_defaults;

option java_package="plus_modeled";

/*
  
  Default values for the system which are required for running forecasts.
  This is stored as an object in the database but is captured as an object
  so tests are not tied to the database.     
*/
message SystemDefaults {
  /*
    Default user - used in places where user is optional, like querying growth assumptions.
  */
  string default_user = 1;
  
  /*
    Default growth outlook - used when not specified by user.
  */
  uint32 default_growth_outlook = 2;
  
  /*
    Value for inflation, used to PV future dollars to make sense of them.
  */
  core.RateCurve inflation = 3;
  
  /*
    Rate to charge any `remaining_shortfall` values.
  */
  core.RateCurve cost_of_capital = 4;
  
  /*
    System growth numbers for various item types.
  */
  growth.GrowthItemMappings growth_item_mappings = 5;
  
  /*
    Standard number of forecasts for M.C.
  */
  uint32 forecast_count = 6;
  
  /*
    Maximum losses that can be used to reduce offset ordinary income.
  */
  double max_losses_offsetting_ordinary = 7;
  
  /*
    Maps the DbId numeric value of flow types (e.g. `CollegeExpense`) to account type (e.g. `CollegeIrs529)
  */
  map<uint32, core_enums.AccountType> auto_flow_account_links = 8;
  
  /*
    Maps the DbId numeric value of account type to corresponding contribution limits.
  */
  map<uint32, retirement.RetirementContributionLimit> retirement_contribution_limits = 9;
}